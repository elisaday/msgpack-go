package msgpack

import (
	"bytes"
	"testing"
)

func TestPackUInt64(t *testing.T) {
	b := &bytes.Buffer{}

	for _, i := range []uint64{0, 1, 31, 32, 33, 63, 64, 65, 126, 127, 128, 129,
		192, 201, 254, 255, 256,
		32764, 32765, 32766, 65534, 65535, 65536,
		2147483646, 2147483647, 21474836478,
		4294967294, 4294967295, 4294967296,
		9223372036854775806, 9223372036854775807, 9223372036854775808,
		18446744073709551613, 18446744073709551614, 18446744073709551615} {
		_, err := PackUInt64(b, i)
		if err != nil {
			t.Error("err != nil")
		}
	}

	if bytes.Compare(b.Bytes(), []byte{
		0x0, 0x1, 0x1f, 0x20, 0x21, 0x3f, 0x40, 0x41, 0x7e, 0x7f, 0xcc, 0x80,
		0xcc, 0x81, 0xcc, 0xc0, 0xcc, 0xc9, 0xcc, 0xfe, 0xcc, 0xff, 0xcd, 0x1,
		0x0, 0xcd, 0x7f, 0xfc, 0xcd, 0x7f, 0xfd, 0xcd, 0x7f, 0xfe, 0xcd, 0xff,
		0xfe, 0xcd, 0xff, 0xff, 0xce, 0x0, 0x1, 0x0, 0x0, 0xce, 0x7f, 0xff,
		0xff, 0xfe, 0xce, 0x7f, 0xff, 0xff, 0xff, 0xcf, 0x0, 0x0, 0x0, 0x4,
		0xff, 0xff, 0xff, 0xfe, 0xce, 0xff, 0xff, 0xff, 0xfe, 0xce, 0xff, 0xff,
		0xff, 0xff, 0xcf, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0xcf, 0x7f,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xcf, 0x7f, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xcf, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xcf, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff}) != 0 {
		t.Error("wrong output", b.Bytes())
	}
}

func TestPackInt64(t *testing.T) {
	b := &bytes.Buffer{}

	for _, i := range []int64{0, 1, 31, 32, 33, 63, 64, 65, 126, 127, 128, 129,
        192, 201, 254, 255, 256,
        32764, 32765, 32766, 65534, 65535, 65536,
        2147483646, 2147483647, 21474836478,
        4294967294, 4294967295, 4294967296,
        9223372036854775806, 9223372036854775807,
        0, -1, -31, -32, -33, -63, -64, -65, -126, -127, -128, -129,
        -192, -201, -254, -255, -256,
        -32764, -32765, -32766, -65534, -65535, -65536,
        -2147483646, -2147483647, -21474836478,
        -4294967294, -4294967295, -4294967296,
        -9223372036854775806, -9223372036854775807} {
		_, err := PackInt64(b, i)
		if err != nil {
			t.Error("err != nil")
		}
	}

	if bytes.Compare(b.Bytes(), []byte{
		0x0, 0x1, 0x1f, 0x20, 0x21, 0x3f, 0x40, 0x41, 0x7e, 0x7f, 0xd1, 0x0, 0x80, 0xd1,
		0x0, 0x81, 0xd1, 0x0, 0xc0, 0xd1, 0x0, 0xc9, 0xd1, 0x0, 0xfe, 0xd1, 0x0, 0xff,
		0xd1, 0x1, 0x0, 0xd1, 0x7f, 0xfc, 0xd1, 0x7f, 0xfd, 0xd1, 0x7f, 0xfe, 0xd2, 0x0,
		0x0, 0xff, 0xfe, 0xd2, 0x0, 0x0, 0xff, 0xff, 0xd2, 0x0, 0x1, 0x0, 0x0, 0xd2, 0x7f, 
		0xff, 0xff, 0xfe, 0xd2, 0x7f, 0xff, 0xff, 0xff, 0xd3, 0x0, 0x0, 0x0, 0x4, 0xff, 
		0xff, 0xff, 0xfe, 0xd3, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xfe, 0xd3, 0x0, 0x0, 
		0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xd3, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0xd3, 
		0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xd3, 0x7f, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0x0, 0xff, 0xe1, 0xe0, 0xd0, 0xdf, 0xd0, 0xc1, 0xd0, 0xc0, 0xd0, 
		0xbf, 0xd0, 0x82, 0xd0, 0x81, 0xd0, 0x80, 0xd1, 0xff, 0x7f, 0xd1, 0xff, 0x40, 0xd1, 
		0xff, 0x37, 0xd1, 0xff, 0x2, 0xd1, 0xff, 0x1, 0xd1, 0xff, 0x0, 0xd1, 0x80, 0x4, 0xd1, 
		0x80, 0x3, 0xd1, 0x80, 0x2, 0xd2, 0xff, 0xff, 0x0, 0x2, 0xd2, 0xff, 0xff, 0x0, 0x1, 
		0xd2, 0xff, 0xff, 0x0, 0x0, 0xd2, 0x80, 0x0, 0x0, 0x2, 0xd2, 0x80, 0x0, 0x0, 0x1, 
		0xd3, 0xff, 0xff, 0xff, 0xfb, 0x0, 0x0, 0x0, 0x2, 0xd3, 0xff, 0xff, 0xff, 0xff, 0x0, 
		0x0, 0x0, 0x2, 0xd3, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x1, 0xd3, 0xff, 0xff, 
		0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0xd3, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0xd3, 
		0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1}) != 0 {
		t.Error("wrong output", b.Bytes())
	}
}